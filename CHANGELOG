Version 0.3.4 (2013-01-02)

  * Client changes
  
    - The 'requests' library has made incompatible changes in version 1.0.
      As our API code is a fairly thin wrapper around requests, changing it to
      support requests 1.0 would be a major change. We'll do that in
      version 0.4.

      This version now requires requests < 1.0. If you have a later version,
      you can downgrade by typing:

        easy_install -U "requests<1.0"

    - The upload script now gets installed as a command called 'lumi-upload',
      which uploads properly-formatted CSV or JSON data to a project.
      Type 'lumi-upload --help' for usage information.

Version 0.3.3 (2012-11-19)

  * Client changes
    
    - Initial version of upload.py, a script that runs JSON or CSV data
      through the entire upload process.

Version 0.3.2 (2012-10-15)

  * Server changes

    - The API has new endpoints for uploading data in CSV format.
    - Attributes of documents can be changed without re-processing the entire
      document, using the PATCH method instead of PUT.

  * Client changes

    - Support the HTTP PATCH method.


Version 0.3.1 (2012-09-21)

This is the first published version of the client that works with the Luminoso
API v3. Significant changes since we first made it available on Git are:

  * Server changes

    - The project list (GET /v3/<account>/projects/) now returns just the
      names of the projects, not strings with your account name attached.
    - The endpoint for deleting a project is now DELETE /v3/<account>/projects,
      with a project=<projectname> parameter.
    - The API now provides .../jobs/<id> endpoints, for possibly long-running
      asynchronous tasks.
    - Running DELETE on the project URL itself will instead clear all data
      from the project, while leaving it in existence.

  * Client changes
  
    - PUT requests (for example, for replacing an exsiting document) work
      correctly.
    - The client has a special `wait_for` function that polls a .../jobs/<id>
      endpoint until a given task finishes. (See test.py for an example of
      using this.)
